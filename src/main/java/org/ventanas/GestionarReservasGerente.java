package org.ventanas;

import Data.Variables;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;

import static Data.FuncionesEnlace.*;
import static Data.FuncionesEnlace.mostrarReservasDeUsuarioEnArraylist;
import static Funciones_BBDD.FuncionesComprobacion.comprobacionFormatoFecha;
import static Funciones_BBDD.FuncionesComprobacion.comprobacionValidezFechas;

public class GestionarReservasGerente extends javax.swing.JFrame {
    /**
     * Creates new form NewJFrame
     */

    public GestionarReservasGerente(PerfilGerente parent) {
        this.ventanaGerente = parent;
        this.setUndecorated(true);
        initComponents();
        setLocationRelativeTo(parent);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        EliminarButton = new javax.swing.JButton();
        ModificarButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaReservas = new javax.swing.JTable();
        fechaInicio = new javax.swing.JFormattedTextField();
        fechaFin = new javax.swing.JFormattedTextField();
        PersonasTextfield = new javax.swing.JTextField();
        IDtext = new javax.swing.JTextField();
        IDlabel = new javax.swing.JLabel();
        FechaInicioLabel = new javax.swing.JLabel();
        FechaFinLabel = new javax.swing.JLabel();
        PersonasLabel = new javax.swing.JLabel();
        volverButton = new javax.swing.JButton();
        salirButton = new javax.swing.JButton();
        error = new javax.swing.JLabel();
        Recordatorio = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        volverButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        volverButton.setText("<");
        volverButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverButtonActionPerformed(evt);
            }
        });

        salirButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        salirButton.setText("X");
        salirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirButtonActionPerformed(evt);
            }
        });


        EliminarButton.setText("Eliminar");
        EliminarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarButtonActionPerformed(evt);
            }
        });

        ModificarButton.setText("Modificar");

        ModificarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModificarButtonActionPerformed(evt);
            }
        });
        TablaReservas = crearTabla();
        jScrollPane1 = annadirScroll(TablaReservas);

        fechaInicio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));

        fechaFin.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));

        IDlabel.setText("Id del cliente:");

        Recordatorio.setText("Para eliminar, rellene solo el ID");

        FechaInicioLabel.setText("Nueva Fecha Inicio");

        FechaFinLabel.setText("Nueva Fecha Fin");

        PersonasLabel.setText("Nuevo Numero de Personas");

        volverButton.setText("<");

        salirButton.setText("X");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(29, 29, 29)
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(volverButton))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                                .addComponent(PersonasLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(FechaInicioLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(IDlabel, javax.swing.GroupLayout.Alignment.LEADING))
                                                        .addComponent(EliminarButton))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(121, 121, 121)
                                                                .addComponent(salirButton))
                                                        .addComponent(ModificarButton)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                .addComponent(fechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                                        .addGap(9, 9, 9)
                                                                        .addComponent(IDtext, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                .addComponent(PersonasTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                                        .addGap(9, 9, 9)
                                                                        .addComponent(fechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                        .addComponent(FechaFinLabel)
                                        .addComponent(Recordatorio,javax.swing.GroupLayout.PREFERRED_SIZE,300,javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(error, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(20, 20, 20))))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(volverButton)
                                        .addComponent(salirButton))
                                .addGap(9, 9, 9)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(error, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(IDlabel)
                                                        .addComponent(IDtext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(FechaInicioLabel)
                                                        .addComponent(fechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(FechaFinLabel)
                                                        .addComponent(fechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(29, 29, 29)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(PersonasLabel)
                                                        .addComponent(PersonasTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(46, 46, 46)
                                                .addComponent(Recordatorio)
                                                .addGap(12,12,12)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(EliminarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(ModificarButton,javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 85, Short.MAX_VALUE))
        );

        ModificarButton.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>
    private Object[][] devolverarray(ArrayList<ArrayList<String>> hoteles) {
        Object[][] arrayBidimensional = new Object[hoteles.size()][]; // Incrementa en 1 para incluir el nuevo dato

        for (int i = 0; i < hoteles.size(); i++) { // Itera solo hasta hoteles.size()
            ArrayList<String> lista = hoteles.get(i);
            arrayBidimensional[i] = lista.toArray(new Object[0]); // Incrementa el Ã­ndice en 1 para dejar espacio para el nuevo dato
        }
        return arrayBidimensional;
    }
    private void EliminarButtonActionPerformed(java.awt.event.ActionEvent evt) {
        error.setForeground(new java.awt.Color(255, 0, 0));
        if(IDtext.getText().isEmpty()){
            error.setVisible(false);
            error.setText("Rellena los campos acordes para continuar");
            error.setVisible(true);
            return;
        }
        if(!HayNumerosEnString(IDtext.getText())){
            error.setVisible(false);
            error.setText("El id debe de ser solo numerico");
            error.setVisible(true);
            return;
        }
        int id = Integer.parseInt(IDtext.getText());
        ArrayList<String> datos = conseguirDatosConIDGerente(id);
        String correo,telef,contra;
        correo = datos.get(0);
        telef = datos.get(1);
        contra = datos.get(2);
        if(!UsuarioTieneReservaEnUnHotel(correo,telef,contra,conseguirLugarTrabajoEmpleado(conseguirIDExtra(Variables.usuario,Variables.telefono,Variables.password)))){
            error.setVisible(false);
            error.setText("No tiene ninguna reserva hecha en el hotel");
            error.setVisible(true);
            return;
        }
        error.setVisible(false);
        error.setForeground(new java.awt.Color(0, 0, 0));
        error.setText("Reserva eliminada con exito");
        error.setVisible(true);
        EliminarReservaDeUsuarioDesdeGerente(id);
        DefaultTableModel modelo = (DefaultTableModel) TablaReservas.getModel();
        modelo.setDataVector(devolverarray(mostrarReservasDeHotelEnArraylistGerente(Variables.usuario, Variables.telefono, Variables.password)), new Object[]{ "IDusuario", "Fecha de Inicio", "Fecha de Fin", "Num Personas"});
    }

    private void salirButtonActionPerformed(java.awt.event.ActionEvent evt) {
        salirPrograma();
    }
    private void volverButtonActionPerformed(java.awt.event.ActionEvent evt) {
        this.setVisible(false);
        ventanaGerente.setVisible(true);
    }

    private void ModificarButtonActionPerformed(java.awt.event.ActionEvent evt){
        error.setForeground(new java.awt.Color(255, 0, 0));
        if(IDtext.getText().isEmpty() ||fechaInicio.getText().isEmpty() || fechaFin.getText().isEmpty() || PersonasTextfield.getText().isEmpty()){
            error.setVisible(false);
            error.setText("Rellena todos los campos para continuar");
            error.setVisible(true);
            return;
        }
        if(!HayNumerosEnString(IDtext.getText())){
            error.setVisible(false);
            error.setText("El id debe de ser solo numerico");
            error.setVisible(true);
            return;
        }
        int id = Integer.parseInt(IDtext.getText());
        ArrayList<String> datos = conseguirDatosConIDGerente(id);
        String correo,telef,contra;
        correo = datos.get(0);
        telef = datos.get(1);
        contra = datos.get(2);
        if(!UsuarioTieneReservaEnUnHotel(correo,telef,contra,conseguirLugarTrabajoEmpleado(conseguirIDExtra(Variables.usuario,Variables.telefono,Variables.password)))){
            error.setVisible(false);
            error.setText("No tiene ninguna reserva hecha en el hotel");
            error.setVisible(true);
            return;
        }
        if (!comprobacionFormatoFecha(fechaInicio.getText())) {
            error.setVisible(false);
            error.setText("Fecha de inicio debe de ser mayor o igual a 2024");
            error.setVisible(true);
            return;
        }
        if (!comprobacionFormatoFecha(fechaFin.getText())) {
            error.setVisible(false);
            error.setText("Fecha de fin debe de ser mayor o igual a 2024");
            error.setVisible(true);
            return;
        }
        if (comprobacionValidezFechas(fechaInicio.getText(), fechaFin.getText())) {
            error.setVisible(false);
            error.setText("La fecha final no puede ser anterior a la inicial");
            error.setVisible(true);
            return;
        }
        if(!TamanoString(PersonasTextfield.getText()) || !HayNumerosEnString(PersonasTextfield.getText())){
            error.setVisible(false);
            error.setText("Solo puede haber 8 personas como maximo");
            error.setVisible(true);
            return;
        }
        error.setVisible(false);
        error.setForeground(new java.awt.Color(0, 0, 0));
        error.setText("Reserva modificada con exito");
        error.setVisible(true);
        int personasI = Integer.parseInt(PersonasTextfield.getText());
        ModificarReservaDeUsuarioDesdeGerente(id,fechaInicio.getText(),fechaFin.getText(),personasI);
        DefaultTableModel modelo = (DefaultTableModel) TablaReservas.getModel();
        modelo.setDataVector(devolverarray(mostrarReservasDeHotelEnArraylistGerente(Variables.usuario, Variables.telefono, Variables.password)), new Object[]{"IDusuario", "Fecha de Inicio", "Fecha de Fin", "Num Personas"});
    }

    private JTable crearTabla(){
        javax.swing.JTable TablaReservas=new JTable();
        TablaReservas.setModel(new javax.swing.table.DefaultTableModel(

                devolverarray(mostrarReservasDeHotelEnArraylistGerente(Variables.usuario, Variables.telefono, Variables.password))
                ,
                new String[]{
                        "IDusuario", "Fecha de Inicio", "Fecha de Fin", "Num Personas"
                }
        ) {
            boolean[] canEdit = new boolean[]{
                    false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        return TablaReservas;
    }

    private JScrollPane annadirScroll(JTable tabla){
        javax.swing.JScrollPane jScrollPane=new JScrollPane();
        jScrollPane.setViewportView(tabla);
        if (tabla.getColumnModel().getColumnCount() > 0) {
            tabla.getColumnModel().getColumn(0).setResizable(false);
            tabla.getColumnModel().getColumn(1).setResizable(false);
            tabla.getColumnModel().getColumn(2).setResizable(false);
            tabla.getColumnModel().getColumn(3).setResizable(false);
        }
        return jScrollPane;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionarReservas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionarReservas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionarReservas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionarReservas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestionarReservasGerente(ventanaGerente).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JButton EliminarButton;
    private javax.swing.JLabel FechaFinLabel;
    private javax.swing.JLabel FechaInicioLabel;
    private javax.swing.JLabel IDlabel;
    private javax.swing.JLabel Recordatorio;
    private javax.swing.JTextField IDtext;
    private javax.swing.JButton ModificarButton;
    private javax.swing.JLabel PersonasLabel;
    private javax.swing.JTextField PersonasTextfield;
    private javax.swing.JLabel error;
    private javax.swing.JButton volverButton;
    private javax.swing.JButton salirButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable TablaReservas;
    private javax.swing.JFormattedTextField fechaInicio;
    private javax.swing.JFormattedTextField fechaFin;
    private static PerfilGerente ventanaGerente;

}
